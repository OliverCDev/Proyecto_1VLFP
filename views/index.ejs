<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Analizador de Pokémons</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  </head>
<body>


  <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
    <div class="container-fluid">
      <a class="navbar-brand" href="/">Analizador</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
  
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item"><a class="nav-link" href="/">Home</a></li>
          <li class="nav-item"><a class="nav-link" href="/errores">Error Report</a></li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">Archivo</a>
            <ul class="dropdown-menu">
              <li><button class="dropdown-item" onclick="limpiarEditor()">Limpiar Editor</button></li>
              <li><label class="dropdown-item" for="fileInput">Cargar Archivo</label></li>
              <li><button class="dropdown-item" onclick="guardarArchivo()">Guardar Archivo</button></li>
            </ul>
          </li>
        </ul>
      </div>
    </div>
  </nav>


  <div class="container">
  <h1 class="mb-4">Editor de Texto</h1>

  <form id="analizarForm">
    <div class="row">

      <div class="col-md-6">
        <div class="mb-3">
          <textarea id="editorTexto" name="editorTexto" class="form-control" rows="15" placeholder="Escribe aquí tu código..."></textarea>
        </div>
        <button type="submit" class="btn btn-primary">Analizar</button>
      </div>


    <div id="tablaTokensContainer" style="display: none;">
  <hr>
  <h2 class="mt-5">Tabla de Tokens</h2>
  <table class="table table-bordered mt-3">
    <thead class="table-dark">
      <tr>
        <th>#</th>
        <th>Fila</th>
        <th>Columna</th>
        <th>Lexema</th>
        <th>Token</th>
      </tr>
    </thead>
    <tbody id="tablaTokensBody"></tbody>
  </table>
</div>
  <!-- Cargar Archivo -->
  <input type="file" id="fileInput" accept=".pklfp" style="display: none;" onchange="cargarArchivo(event)">

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
  document.getElementById("analizarForm").addEventListener("submit", function (e) {
    e.preventDefault(); 

    const texto = document.getElementById("editorTexto").value;

    fetch("/analyze", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ editorTexto: texto })
    })
    .then(res => res.json())
    .then(data => {

      console.log("Esta es la data -------> " + data)
      if (data.tokens && data.tokens.length > 0) {
        const tbody = document.getElementById("tablaTokensBody");
        tbody.innerHTML = ""; 
        data.tokens.forEach((token, i) => {
          tbody.innerHTML += `
            <tr>
              <td>${i + 1}</td>
              <td>${token.row}</td>
              <td>${token.colum}</td>
              <td>${token.lexema}</td>
              <td>${token.typeTokenString}</td>
            </tr>`;
        });
        document.getElementById("tablaTokensContainer").style.display = "block";
      }


      if (data.jugadores && (!data.errores || data.errores.length === 0)) {
        const jugadoresData = JSON.stringify(data.jugadores);
        localStorage.setItem("jugadores", jugadoresData);
        window.open("/jugadores", "_blank");
      }

     
      if (data.errores && data.errores.length > 0) {
        const erroresData = JSON.stringify(data.errores);
        localStorage.setItem("errores", erroresData);
        window.open("/errores", "_blank");
      }

     
      localStorage.setItem("textoAnalizado", texto);
    });
  });
  function limpiarEditor() {
 
  document.getElementById("editorTexto").value = "";

  
  const tabla = document.getElementById("tablaTokensBody");
  if (tabla) tabla.innerHTML = "";


  const contenedorTabla = document.getElementById("tablaTokensContainer");
  if (contenedorTabla) contenedorTabla.style.display = "none";


  localStorage.removeItem("textoAnalizado");
  localStorage.removeItem("jugadores");
  localStorage.removeItem("errores");
}

function cargarArchivo(event) {
  const archivo = event.target.files[0];
  if (!archivo) return;

  const lector = new FileReader();
  lector.onload = function(e) {
    const contenido = e.target.result;
    document.getElementById("editorTexto").value = contenido;
    console.log("Contenido cargado en el textarea." + contenido)
  };
  
  lector.readAsText(archivo);
}
function guardarArchivo() {
  const contenido = document.getElementById("editorTexto").value;
  const blob = new Blob([contenido], { type: "text/plain;charset=utf-8" });

  const enlace = document.createElement("a");
  enlace.href = URL.createObjectURL(blob);
  enlace.download = "archivo.pklfp"; 

  document.body.appendChild(enlace);
  enlace.click();
  document.body.removeChild(enlace);
}
  </script>
</body>
</html>
